---
image: alpine:latest

stages:
  - test
  - staging
  - production

test:
  stage: test
  script:
    - exit 0
  only:
    - triggers
    - branches

staging:
  stage: staging
  variables:
    CI_REGISTRY: 'index.docker.io'
    CI_APPLICATION_REPOSITORY: $CI_REGISTRY/$CI_PROJECT_PATH
    CI_APPLICATION_TAG: $CI_COMMIT_REF_SLUG
    CI_CONTAINER_NAME: ci_job_build_${CI_JOB_ID}
    TILLER_NAMESPACE: "kube-system"
    KUBE_NAMESPACE: staging
  before_script:
  # install dependencies
  - echo "1"
  - apk add -U openssl curl tar gzip bash ca-certificates git
  - echo "1.1"
  - wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub
  - echo "2"
  - wget https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.23-r3/glibc-2.23-r3.apk
  - echo "3"
  - apk add glibc-2.23-r3.apk
  - echo "4"
  - rm glibc-2.23-r3.apk
  - echo "5"
  - curl https://kubernetes-helm.storage.googleapis.com/helm-v2.16.10-linux-amd64.tar.gz | tar zx
  - echo "6"
  - mv linux-amd64/helm /usr/bin/
  - echo "7"
  - helm version --client
  - echo "8"
  - curl -L -o /usr/bin/kubectl https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
  - echo "9"
  - chmod +x /usr/bin/kubectl
  - kubectl version --client
  # ensure NAMESPACE
  - kubectl describe namespace "$KUBE_NAMESPACE" || kubectl create namespace "$KUBE_NAMESPACE"
  # install tiller
  - echo "Checking Tiller..."
  - helm init --upgrade --stable-repo-url https://charts.helm.sh/stable
  - echo "Checking rollback..."
  - kubectl rollout status -n "$TILLER_NAMESPACE" -w "deployment/tiller-deploy"
  - echo "Checking if..."
  - >
    if ! helm version --debug; then
      echo "Failed to init Tiller."
      return 1
    fi
  script:
  # DEPLOY
  - echo $KUBE_NAMESPACE
  - track="${1-stable}"
  - name="$CI_ENVIRONMENT_SLUG"
  - echo "generate an updated requirements.lock file"
  - cd ./reddit
  - helm dep update
  - cd ..
  - echo "deploy"
  - helm dep build reddit
    # for microservice in $(helm dep ls | grep "file://" | awk '{print $1}') ; do
    #   SET_VERSION="$SET_VERSION \ --set $microservice.image.tag='$(curl https://gitlab.matveevelli.ru/$CI_PROJECT_NAMESPACE/ui/raw/master/VERSION)' "
  - echo "upgrade"
  - >
    helm upgrade --install \
      --wait \
      --set ui.ingress.host="$host" \
      --set ui.image.tag="$(curl https://gitlab.matveevelli.ru/$CI_PROJECT_NAMESPACE/ui/raw/master/VERSION)" \
      --set post.image.tag="$(curl https://gitlab.matveevelli.ru/$CI_PROJECT_NAMESPACE/post/raw/master/VERSION)" \
      --set comment.image.tag="$(curl https://gitlab.matveevelli.ru/$CI_PROJECT_NAMESPACE/comment/raw/master/VERSION)" \
      --namespace="$KUBE_NAMESPACE" \
      --version="$CI_PIPELINE_ID-$CI_JOB_ID" \
      "$name" \
      reddit
  environment:
    name: staging
    url: http://staging
  only:
    refs:
      - master
    kubernetes: active

production:
  stage: production
  variables:
    KUBE_NAMESPACE: production
    CI_REGISTRY: 'index.docker.io'
    CI_APPLICATION_REPOSITORY: $CI_REGISTRY/$CI_PROJECT_PATH
    CI_APPLICATION_TAG: $CI_COMMIT_REF_SLUG
    CI_CONTAINER_NAME: ci_job_build_${CI_JOB_ID}
    TILLER_NAMESPACE: "kube-system"
  before_script:
  # install dependencies
  - echo "1"
  - apk add -U openssl curl tar gzip bash ca-certificates git
  - echo "1.1"
  - wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub
  - echo "2"
  - wget https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.23-r3/glibc-2.23-r3.apk
  - echo "3"
  - apk add glibc-2.23-r3.apk
  - echo "4"
  - rm glibc-2.23-r3.apk
  - echo "5"
  - curl https://kubernetes-helm.storage.googleapis.com/helm-v2.16.10-linux-amd64.tar.gz | tar zx
  - echo "6"
  - mv linux-amd64/helm /usr/bin/
  - echo "7"
  - helm version --client
  - echo "8"
  - curl -L -o /usr/bin/kubectl https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
  - echo "9"
  - chmod +x /usr/bin/kubectl
  - kubectl version --client
  # ensure NAMESPACE
  - kubectl describe namespace "$KUBE_NAMESPACE" || kubectl create namespace "$KUBE_NAMESPACE"
  # install tiller
  - echo "Checking Tiller..."
  - helm init --upgrade --stable-repo-url https://charts.helm.sh/stable
  - echo "Checking rollback..."
  - kubectl rollout status -n "$TILLER_NAMESPACE" -w "deployment/tiller-deploy"
  - echo "Checking if..."
  - >
    if ! helm version --debug; then
      echo "Failed to init Tiller."
      return 1
    fi
  script:
  # DEPLOY
  - echo $KUBE_NAMESPACE
  - track="${1-stable}"
  - name="$CI_ENVIRONMENT_SLUG"
  - echo "generate an updated requirements.lock file"
  - cd ./reddit
  - helm dep update
  - cd ..
  - echo "deploy"
  - helm dep build reddit
    # for microservice in $(helm dep ls | grep "file://" | awk '{print $1}') ; do
    #   SET_VERSION="$SET_VERSION \ --set $microservice.image.tag='$(curl https://gitlab.matveevelli.ru/$CI_PROJECT_NAMESPACE/ui/raw/master/VERSION)' "
  - echo "upgrade"
  - >
    helm upgrade --install \
      --wait \
      --set ui.ingress.host="$host" \
      --set ui.image.tag="$(curl https://gitlab.matveevelli.ru/$CI_PROJECT_NAMESPACE/ui/raw/master/VERSION)" \
      --set post.image.tag="$(curl https://gitlab.matveevelli.ru/$CI_PROJECT_NAMESPACE/post/raw/master/VERSION)" \
      --set comment.image.tag="$(curl https://gitlab.matveevelli.ru/$CI_PROJECT_NAMESPACE/comment/raw/master/VERSION)" \
      --namespace="$KUBE_NAMESPACE" \
      --version="$CI_PIPELINE_ID-$CI_JOB_ID" \
      "$name" \
      reddit
  environment:
    name: production
    url: http://production
  #when: manual
  only:
    refs:
      - master
    kubernetes: active



#.auto_devops: &auto_devops |
  # Auto DevOps variables and functions
#  [[ "$TRACE" ]] && set -x

 # function delete() {
  #  track="${1-stable}"
  #  name="$CI_ENVIRONMENT_SLUG"
  #  helm delete "$name" || true
  #}

#before_script:
#  - *auto_devops
